FROM php:7.4-alpine

RUN	echo "upload_max_filesize = 128M" >> /usr/local/etc/php/conf.d/0-upload_large_dumps.ini \
&&	echo "post_max_size = 128M" >> /usr/local/etc/php/conf.d/0-upload_large_dumps.ini \
&&	echo "memory_limit = 1G" >> /usr/local/etc/php/conf.d/0-upload_large_dumps.ini \
&&	echo "max_execution_time = 600" >> /usr/local/etc/php/conf.d/0-upload_large_dumps.ini \
&&	echo "max_input_vars = 5000" >> /usr/local/etc/php/conf.d/0-upload_large_dumps.ini

STOPSIGNAL SIGINT

RUN	addgroup -S adminer \
&&	adduser -S -G adminer adminer \
&&	mkdir -p /var/www/html \
&&	mkdir -p /var/www/html/plugins-enabled \
&&	chown -R adminer:adminer /var/www/html

WORKDIR /var/www/html

RUN	set -x \
&&	apk add --no-cache --virtual .build-deps \
	postgresql-dev \
	sqlite-dev \
	unixodbc-dev \
	freetds-dev \
&&	docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \
&&	docker-php-ext-install \
	pdo_mysql \
	pdo_pgsql \
	pdo_sqlite \
	pdo_odbc \
	pdo_dblib \
&&	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)" \
&&	apk add --virtual .phpexts-rundeps $runDeps \
&&	apk del .build-deps

COPY	*.php /var/www/html/

ENV	ADMINER_VERSION 4.8.1
ENV	ADMINER_DOWNLOAD_SHA256 2fd7e6d8f987b243ab1839249551f62adce19704c47d3d0c8dd9e57ea5b9c6b3
ENV	ADMINER_SRC_DOWNLOAD_SHA256 ef832414296d11eed33e9d85fff3fb316c63f13f05fceb4a961cbe4cb2ae8712

RUN	set -x \
&&	curl -fsSL https://github.com/vrana/adminer/releases/download/v$ADMINER_VERSION/adminer-$ADMINER_VERSION.php -o adminer.php \
&&	echo "$ADMINER_DOWNLOAD_SHA256  adminer.php" |sha256sum -c - \
&&	curl -fsSL https://github.com/vrana/adminer/archive/v$ADMINER_VERSION.tar.gz -o source.tar.gz \
&&	echo "$ADMINER_SRC_DOWNLOAD_SHA256  source.tar.gz" |sha256sum -c - \
&&	tar xzf source.tar.gz --strip-components=1 "adminer-$ADMINER_VERSION/designs/" "adminer-$ADMINER_VERSION/plugins/" \
&&	rm source.tar.gz

COPY	entrypoint.sh /usr/local/bin/
ENTRYPOINT	[ "entrypoint.sh", "docker-php-entrypoint" ]

USER	adminer
CMD	[ "php", "-S", "[::]:8080", "-t", "/var/www/html" ]

EXPOSE 8080

# # support oracle
USER root

ENV ORACLE_BASE     /usr/local/oracle
ENV LD_LIBRARY_PATH /usr/local/oracle/instantclient_19_23:/lib
ENV TNS_ADMIN       /usr/local/oracle/instantclient_19_23/network/admin
ENV ORACLE_HOME     /usr/local/oracle/instantclient_19_23

RUN apk update && apk upgrade --available && \
  apk add --no-cache bash autoconf build-base composer libaio libnsl libc6-compat busybox-extras curl && \
  ln -s /lib/libc.so.6 /usr/lib/libresolv.so.2 && \
# ln -s /lib64/ld-linux-x86-64.so.2 /usr/lib/ld-linux-x86-64.so.2 && \
  ln -s /usr/lib/libnsl.so.3.0.0 /usr/lib/libnsl.so.1 && \
  rm -rf /var/cache/apk/*  && \
  cd /tmp

# # Install Oracle Client and build OCI8 (Oracle Command Interface 8 - PHP extension)
RUN \
## Download and unarchive Instant Client v19.23
  mkdir            /usr/local/oracle && \
  curl -o          /tmp/sdk.zip            https://download.oracle.com/otn_software/linux/instantclient/1923000/instantclient-sdk-linux.arm64-19.23.0.0.0dbru.zip && \
  curl -o          /tmp/basic_lite.zip     https://download.oracle.com/otn_software/linux/instantclient/1923000/instantclient-basiclite-linux.arm64-19.23.0.0.0dbru.zip && \
# curl -o          /tmp/sqlplus.zip        https://download.oracle.com/otn_software/linux/instantclient/1923000/instantclient-sqlplus-linux.arm64-19.23.0.0.0dbru.zip && \                     
  unzip -o -d      /usr/local/oracle       /tmp/sdk.zip && \
  unzip -o -d      /usr/local/oracle       /tmp/basic_lite.zip  && \
# unzip -o -d      /usr/local/oracle       /tmp/sqlplus.zip && \
  chown adminer:adminer /usr/local/oracle/instantclient_19_23/network/admin && \
  rm -rf           /tmp/*.zip && \
  mkdir            /etc/php.d && \
  echo "extension=oci8.so" > /etc/php.d/instantclient.ini

## Build OCI8 with PECL
RUN \
  C_INCLUDE_PATH=/usr/local/oracle/instantclient_19_23/sdk/include/ docker-php-ext-configure oci8       --with-oci8=instantclient,/usr/local/oracle/instantclient_19_23 && \
  docker-php-ext-install oci8 && \
  C_INCLUDE_PATH=/usr/local/oracle/instantclient_19_23/sdk/include/ docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/usr/local/oracle/instantclient_19_23 && \
  docker-php-ext-install pdo_oci 

#  Clean up
RUN \
  rm -rf /tmp/*.zip /var/cache/apk/* /tmp/pear/

USER adminer
